import math as m
import numpy as np
import random as r

"""W = np.array(input("W"))
X = np.array(input("X"))
data = input("Data")
Data=[]
for i in range(16):
    Data.append(data[2i])
Key = input("Key")
Key = np.array([Key[0],Key[2]])"""

W=np.array([[-1.69799723e+02,-2.24450936e+02,-1.60361218e+02,-1.88191276e+02
,-1.81891251e+01,4.90102910e+01,-3.51938768e+01,4.56487456e+01
,-1.29296776e+12,-1.29296776e+12,-1.29296776e+12,-1.29296776e+12
,-2.68964934e+19,-2.68964934e+19,-2.68964934e+19,-2.68964934e+19]
,[-1.56086741e+02,-1.72087156e+02,-1.60449079e+02,-2.14592206e+02
,3.17973571e+01,2.15373965e+01,-4.34416457e+01,-2.27991755e+01
,-1.29296776e+12,-1.29296776e+12,-1.29296776e+12,-1.29296776e+12
,-2.68964934e+19,-2.68964934e+19,-2.68964934e+19,-2.68964934e+19]
,[-1.77621457e+02,-1.45084549e+02,-2.17773553e+02,-2.09936614e+02
,4.95779416e+01,1.73414172e+01,3.18736098e+01,-1.12320771e+01
,-1.29296776e+12,-1.29296776e+12,-1.29296776e+12,-1.29296776e+12
,-2.68964934e+19,-2.68964934e+19,-2.68964934e+19,-2.68964934e+19]
,[-1.44636279e+02,-1.47633654e+02,-2.18422921e+02,-2.13309151e+02
,7.49627333e+00,-3.26079883e+01,2.12383211e+01,-4.23709510e+01
,-1.29296776e+12,-1.29296776e+12,-1.29296776e+12,-1.29296776e+12
,-2.68964934e+19,-2.68964934e+19,-2.68964934e+19,-2.68964934e+19]
,[-1.47507617e+02,-1.84813009e+02,-1.42517515e+02,-2.31713024e+02
,-3.48049015e+01,-4.50478399e+01,2.43476705e+01,5.52634112e+00
,-1.29296776e+12,-1.29296776e+12,-1.29296776e+12,-1.29296776e+12
,-2.68964934e+19,-2.68964934e+19,-2.68964934e+19,-2.68964934e+19]
,[-2.12232137e+02,-1.98486237e+02,-1.41527808e+02,-2.04659884e+02
,2.72305592e+01,2.18963809e+00,4.80127296e+01,3.45003069e+01
,-1.29296776e+12,-1.29296776e+12,-1.29296776e+12,-1.29296776e+12
,-2.68964934e+19,-2.68964934e+19,-2.68964934e+19,-2.68964934e+19]
,[-2.08589716e+02,-2.21364954e+02,-1.95952999e+02,-2.05551103e+02
,-4.62630482e+01,-1.71541998e+01,2.68814909e+00,-4.73137805e+01
,-1.29296776e+12,-1.29296776e+12,-1.29296776e+12,-1.29296776e+12
,-2.68964934e+19,-2.68964934e+19,-2.68964934e+19,-2.68964934e+19]
,[-2.32896787e+02,-1.44194753e+02,-1.62654535e+02,-1.60366955e+02
,3.00377965e+00,-2.38100668e+01,1.88395949e+01,-1.74746452e+01
,-1.29296776e+12,-1.29296776e+12,-1.29296776e+12,-1.29296776e+12
,-2.68964934e+19,-2.68964934e+19,-2.68964934e+19,-2.68964934e+19]])

X=np.array([[39.22222694,33.18461838,28.55396306,44.4764981,26.09955409
,-5.93906105,10.62280137,45.35469487]
,[-31.34161598,16.72575586,1.53695843,-35.5015678,33.41281682
,-7.09360472,40.34909803,-32.9416686]])

Data=np.array([0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0])


Key=[[0,1],[1,0]]

def esigmoid(A):
    B=np.ones(np.size(A))
    return np.divide(B,(B + np.exp(-1*A)))  # 1/(1 + np.exp(-1*A))

def esigmoidprime(A):
    return esigmoid(A) * esigmoid(A) * np.exp (-1*A)

def h(W):
    return esigmoid(np.dot(W,Data))

def o(h,X):
    return esigmoid(np.dot(X,h))

def c(num_data,o):
    return np.dot(o - Key[num_data],o - Key[num_data])

def cost(num_data,W,X):
    return c(num_data,o(h(W),X))/2

costvector=[cost(0,W,X),cost(1,W,X)]
print(costvector)
